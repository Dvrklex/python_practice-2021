{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"PSG": {
		"prefix": "psg",
		"body": [
			"import PySimpleGUI as sg",
			"",
			"layout = [",
			"\t\t\t[sg.Text('${1:label1}')],",
			"\t\t\t[sg.Text('${2:label2}'), sg.Input(key='${3:label3}')],",
			"\t\t\t[sg.Input(key='${4:label4}', enable_events=True)],",
			"\t\t\t[sg.Button('OK'), sg.Button('Exit')]",
			"\t\t\t]",
			"",
			"window = sg.Window('${5:winTitle}', layout, location=(2500, 500)) # return_keyboard_events=True",
			"",
			"while True:",
			"\tevent, values = window.read()",
			"\tif event in [None, 'Exit']:",
			"\t\tbreak",
			"\t$6",
			"",
			"window.close()"
		]
	},
	"constructor": {
		"prefix": "defi",
		"body": [
			"def __init__(self, ${1:param1}):",
			"\t${2:pass}"
		],
		"description": "constructor"
	},
	"def comment": {
		"prefix": "defc",
		"body": [
			"def ${1:fName}($2):",
			"\t'''${3:comment}'''"
		],
		"description": "commented def"
	},
	"input": {
		"prefix": "kin",
		"body": [
			"${1:var} = input('${2:message}')"
		],
		"description": "input"
	},
	"wxp": {
		"prefix": "wxp",
		"body": [
			"from wx import *",
			"",
			"class MyApp(App):",
			"\tdef OnInit(self):",
			"\t\tf = Frame(None, -1, '${1:title}')",
			"\t\tp = Panel(f)",
			"\t\ts = BoxSizer(VERTICAL)",
			"\t\t${2:st1} = StaticText(p, -1, '${3:label}')",
			"\t\t${4:tc1} = TextCtrl(p)",
			"\t\t${5:bt1} = Button(p, -1, '${6:label}')",
			"\t\t${5:bt1}.Bind(EVT_BUTTON, self.accion)",
			"\t\ts.Add(${2:st1}, 0, ALL|EXPAND, 10)",
			"\t\ts.Add(${4:tc1}, 0, ALL|EXPAND, 10)",
			"\t\ts.Add(${5:bt1}, 0, ALL|EXPAND, 10)",
			"\t\t$7",
			"\t\tp.SetSizer(s)",
			"\t\tf.Show()",
			"\t\treturn True",
			"",
			"\tdef accion(self, event):",
			"\t\tprint('${6:label}')",
			"",
			"",
			"app = MyApp()",
			"app.MainLoop()",
			""
		]
	},
	"choices": {
		"prefix": "foo",
		"body": [
			"${1|Choice1,Choice2,Choice3|}"
		],
		"description": "choices"
	},
	"printv": {
		"prefix": "pv",
		"body": [
			"print(f'{$1=}')"
		],
		"description": "printv"
	},
	"constructorK": {
		"prefix": "kcon",
		"body": [
			"def __init__(self, ${1:param1}, ${2:param2}, ${3:param3}, ${4:param4}):",
			"\tself.${1:param1} = ${1:param1}",
			"\tself.${2:param2} = ${2:param2}",
			"\tself.${3:param3} = ${3:param3}",
			"\tself.${4:param4} = ${4:param4}",
		],
		"description": "choices"
	},
	"name main": {
		"prefix": "ifn",
		"body": [
			"def main():",
			"\t${1:pass}",
			"",
			"if __name__ == '__main__':",
			"\tmain()"
		],
		"description": "name main"
	}
}